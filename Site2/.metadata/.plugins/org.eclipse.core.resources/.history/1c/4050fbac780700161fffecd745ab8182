package com.simple;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.sun.rowset.CachedRowSetImpl;

/**
 * Servlet implementation class MovieList
 */
@WebServlet("/MovieList")
public class MovieList extends HttpServlet {
	private static final long serialVersionUID = 1L;
	static String username = "root";
	static String password = "pops711";
	static String dburl = "jdbc:mysql://localhost:3306/moviedb";
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public MovieList() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		Connection conn = null;
		Statement stmt = null;
		Statement stmt2 = null;
		ResultSet rs = null;
		ResultSet starList = null;
		ResultSet genreList = null;
		CachedRowSetImpl crs = null;
		try {
			Class.forName("com.mysql.jdbc.Driver");
		} catch (ClassNotFoundException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			conn = DriverManager.getConnection(dburl, username, password);
			
			stmt = conn.createStatement();
			PrintWriter out = response.getWriter();
			
			
			String queryString = "SELECT sm.movie_id, m.title, m.year, m.director"
					+ " FROM movies m, stars s, " + "stars_in_movies sm"
					+ " WHERE s.id=sm.star_id AND m.id=sm.movie_id";	
			String queryHelper;
			if(request.getParameter("starname") != "" && request.getParameter("starname") != null)
			{
				String names[] = request.getParameter("starname").split(" ");
				if(names.length >= 2)
				{
					queryString += " AND (s.first_name LIKE '%" + names[0] + "%' ";
					for(int i = 0; i < names[0].length(); i++)
					{
						queryString += " OR m.first_name LIKE \"%" + names[0].substring(0,i) + "_" + names[0].substring(i) + "%\"";
					}
					queryString += " OR m.first_name LIKE \"%" + names[0].substring(0,names[0].length()-1) + "%\"";
					for(int i = 1; i < names[0].length(); i++)
					{
						queryString += " OR m.first_name LIKE \"%" + names[0].substring(0,i-1) + names[0].substring(i) + "%\"";
					}
					queryString += " OR m.first_name LIKE \"%" + names[0].substring(1) + "%\"";
					queryString += ")";
					
					queryString += " AND (s.last_name LIKE '%" + names[1] + "%' ";
					for(int i = 0; i < names[1].length(); i++)
					{
						queryString += " OR m.last_name LIKE \"%" + names[1].substring(0,i) + "_" + names[1].substring(i) + "%\"";
					}
					queryString += " OR m.last_name LIKE \"%" + names[1].substring(0,names[1].length()-1) + "%\"";
					for(int i = 1; i < names[1].length(); i++)
					{
						queryString += " OR m.last_name LIKE \"%" + names[1].substring(0,i-1) + names[1].substring(i) + "%\"";
					}
					queryString += " OR m.last_name LIKE \"%" + names[1].substring(1) + "%\"";
					queryString += ")";
				}
				else
				{
					queryString += " AND (s.first_name LIKE '%" + names[0] + "%' ";
					for(int i = 0; i < names[0].length(); i++)
					{
						queryString += " OR m.first_name LIKE \"%" + names[0].substring(0,i) + "_" + names[0].substring(i) + "%\"";
					}
					queryString += " OR m.first_name LIKE \"%" + names[0].substring(0,names[0].length()-1) + "%\"";
					for(int i = 1; i < names[0].length(); i++)
					{
						queryString += " OR m.first_name LIKE \"%" + names[0].substring(0,i-1) + names[0].substring(i) + "%\"";
					}
					queryString += " OR m.first_name LIKE \"%" + names[0].substring(1) + "%\"";
					
					queryString += " OR s.last_name LIKE '%" + names[0] + "%' ";
					for(int i = 0; i < names[0].length(); i++)
					{
						queryString += " OR m.last_name LIKE \"%" + names[0].substring(0,i) + "_" + names[0].substring(i) + "%\"";
					}
					queryString += " OR m.last_name LIKE \"%" + names[0].substring(0,names[0].length()-1) + "%\"";
					for(int i = 1; i < names[0].length(); i++)
					{
						queryString += " OR m.last_name LIKE \"%" + names[0].substring(0,i-1) + names[0].substring(i) + "%\"";
					}
					queryString += " OR m.last_name LIKE \"%" + names[0].substring(1) + "%\"";
					queryString += ")";
				}
			}
			
			if(request.getParameter("title") != "" && request.getParameter("title") != null)
			{
				queryHelper = request.getParameter("title");
				queryString += " AND (m.title LIKE \"%" + queryHelper + "%\"";
				for(int i = 0; i < queryHelper.length(); i++)
				{
					queryString += " OR m.title LIKE \"%" + queryHelper.substring(0,i) + "_" + queryHelper.substring(i) + "%\"";
				}
				queryString += " OR m.title LIKE \"%" + queryHelper.substring(0,queryHelper.length()-1) + "%\"";
				for(int i = 1; i < queryHelper.length(); i++)
				{
					queryString += " OR m.title LIKE \"%" + queryHelper.substring(0,i-1) + queryHelper.substring(i) + "%\"";
				}
				queryString += " OR m.title LIKE \"%" + queryHelper.substring(1) + "%\"";
				queryString += ")";
			}
			if(request.getParameter("director") != "" && request.getParameter("director") != null)
			{
				queryString += " AND m.director LIKE'%" + request.getParameter("director") + "%'";
			}
			if(request.getParameter("year") != "" && request.getParameter("year") != null)
			{
				queryString += " AND m.year='" + request.getParameter("year") + "'";
			}
			
			
			
			rs = stmt.executeQuery(queryString 
					+ " GROUP BY sm.movie_id " + 
					"ORDER BY sm.movie_id;");
			
			ArrayList<ArrayList<String>> moviesAndStars = new ArrayList<ArrayList<String>>();
			ArrayList<String> starNames;

			stmt2 = conn.createStatement();
			while(rs.next())
			{
				starList = stmt2.executeQuery("select s.first_name, s.last_name"
						+ " FROM stars s, " + "stars_in_movies sm"
					+ " WHERE s.id=sm.star_id AND sm.movie_id=" + rs.getInt(1) + ";");
				
				starNames = new ArrayList<String>();
				while(starList.next())
				{
					starNames.add(starList.getString(1)+ " " + starList.getString(2));
				}
				moviesAndStars.add(starNames);
				starList.close();
			}
			rs.beforeFirst();
			
			ArrayList<ArrayList<String>> moviesAndGenres = new ArrayList<ArrayList<String>>();
			ArrayList<String> genres;
			
			stmt2 = conn.createStatement();
			while(rs.next())
			{
				genreList = stmt2.executeQuery("select g.name" +
							" FROM genres g, genres_in_movies gm" +
							" WHERE g.id=gm.genre_id AND gm.movie_id=" + rs.getInt(1) + ";");
				
				genres = new ArrayList<String>();
				while(genreList.next())
				{
					genres.add(genreList.getString(1));
				}
				moviesAndGenres.add(genres);
				genreList.close();
			}
			rs.beforeFirst();
			
			RequestDispatcher dispatcher = getServletContext().getRequestDispatcher("/WEB-INF/movie-list.jsp");
			crs = new CachedRowSetImpl();
	        crs.populate(rs);
	        
			request.getSession().setAttribute("rs", crs);
			request.getSession().setAttribute("moviesAndStars", moviesAndStars);
			request.getSession().setAttribute("moviesAndGenres", moviesAndGenres);
			dispatcher.include(request, response);
			request.getSession().setAttribute("moviesAndGenres", null);
			request.getSession().setAttribute("moviesAndStars", null);
			request.getSession().setAttribute("rs", null);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				if(starList != null)
				{
					starList.close();
				}
				if(rs != null)
				{
					rs.close();
				}
				if(stmt != null)
				{
					stmt.close();
				}
				if(conn != null)
				{
					conn.close();
				}
			} catch (SQLException e) 
			{
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
